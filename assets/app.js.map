{
  "version": 3,
  "file": "app.js",
  "sources": [
    "tmp/transpiled/app/app.js",
    "tmp/transpiled/app/controllers/attack.js",
    "tmp/transpiled/app/controllers/character.js",
    "tmp/transpiled/app/helpers/modifier.js",
    "tmp/transpiled/app/models/attack.js",
    "tmp/transpiled/app/models/character.js",
    "tmp/transpiled/app/router.js",
    "tmp/transpiled/app/routes/character.js",
    "tmp/transpiled/app/routes/index.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "define(\"appkit/app\",\n  [\"resolver\",\"appkit/router\"],\n  function(Resolver, router) {\n    \"use strict\";\n\n    Object.deepExtend = function(destination, source) {\n      for (var property in source) {\n        if (source[property] && source[property].constructor &&\n         source[property].constructor === Object) {\n          destination[property] = destination[property] || {};\n          Object.deepExtend(destination[property], source[property]);\n        } else {\n          destination[property] = source[property];\n        }\n      }\n      return destination;\n    };\n\n    var App = Ember.Application.create({\n      LOG_ACTIVE_GENERATION: true,\n      LOG_VIEW_LOOKUPS: true,\n      modulePrefix: 'appkit', // TODO: loaded via config\n      Resolver: Resolver,\n      Router: Ember.Router.extend({\n        router: router\n      })\n    });\n\n    App.RangeField = Ember.TextField.extend({\n      classNames: 'scrollable',\n      type: 'range',\n      attributeBindings: ['min', 'max', 'step']\n    });\n\n    App.Jsonable = Ember.Mixin.create({\n      excludedJsonProperties: [],\n      getJson: function() {\n          var v, json = {};\n          for (var key in this) {\n              if (this.hasOwnProperty(key) && this.excludedJsonProperties.indexOf(key) === -1) {\n                  v = this[key];\n                  if (v === 'toString') {\n                      continue;\n                  } \n                  if (Ember.typeOf(v) === 'function') {\n                      continue;\n                  }\n                  if (App.Jsonable.detect(v))\n                      v = v.getJson();\n                  json[key] = v;\n              }\n          }\n          return json;\n      }\n    });\n\n    App.computed = {};\n    App.computed.modifierFor = function(dependency) {\n      return Ember.computed(dependency, function() {\n        return Math.floor((this.get(dependency) - 10) / 2);\n      });\n    };\n\n\n    return App;\n  });",
    "define(\"appkit/controllers/attack\",\n  [],\n  function() {\n    \"use strict\";\n    var AttackController;\n\n    AttackController = Ember.ObjectController.extend({\n      actions: {\n        commitDetails: function() {\n          console.debug(this.get('model').name);\n          return this.send('closeModal');\n        }\n      }\n    });\n\n\n    return AttackController;\n  });",
    "define(\"appkit/controllers/character\",\n  [\"appkit/models/attack\"],\n  function(Attack) {\n    \"use strict\";\n    var CharacterController;\n\n    CharacterController = Ember.ObjectController.extend({\n      actions: {\n        save: function() {\n          this.get('model').save();\n          return this.toggleProperty('isEditing');\n        },\n        commitHitPoints: function() {\n          var model;\n          model = this.get('model');\n          model.set('currentHitPoints', model.get('currentHitPoints') + (+this.get('hitPointModifier')));\n          this.set('hitPointModifier', 0);\n          this.get('target').send('closeModal');\n          return model.save();\n        },\n        resetHP: function() {\n          return this.get('model').set('currentHitPoints', this.get('model').get('hitPoints'));\n        },\n        commitAddXP: function() {\n          var model;\n          model = this.get('model');\n          model.set('xp', +model.get('xp') + (+this.get('xpModifier')));\n          this.set('xpModifier', 0);\n          this.get('target').send('closeModal');\n          return model.save();\n        },\n        clearModalValues: function() {\n          return this.set('hitPointModifier', 0);\n        }\n      },\n      isEditing: false,\n      hitPointModifier: 0,\n      xpModifier: 0\n    });\n\n\n    return CharacterController;\n  });",
    "define(\"appkit/helpers/modifier\",\n  [],\n  function() {\n    \"use strict\";\n    Ember.Handlebars.registerBoundHelper('modifier', function(value) {\n      if (+value >= 0) {\n        return \"+\" + value;\n      }\n      return value;\n    });\n\n  });",
    "define(\"appkit/models/attack\",\n  [],\n  function() {\n    \"use strict\";\n    var Attack;\n\n    Attack = Ember.Object.extend();\n\n    Attack.reopenClass({\n      get: function() {\n        return [\n          {\n            name: 'Short Sword',\n            bonus: 2,\n            damage: '1d6',\n            type: 'weapon'\n          }, {\n            name: 'Longbow',\n            bonus: 4,\n            damage: '1d8',\n            type: 'weapon'\n          }, {\n            name: 'Fireball',\n            bonus: 1,\n            damage: '2d6',\n            type: 'spell'\n          }\n        ];\n      }\n    });\n\n\n    return Attack;\n  });",
    "define(\"appkit/models/character\",\n  [\"appkit/app\",\"appkit/models/attack\"],\n  function(App, Attack) {\n    \"use strict\";\n    var Character, defaultCharacter, levels;\n\n    defaultCharacter = {\n      name: 'Aramil',\n      race: 'Wood Elf',\n      \"class\": 'Ranger',\n      xp: 0,\n      currentHitPoints: 20,\n      hitPoints: 20,\n      armorClass: 10,\n      initiativeBonus: 0,\n      speed: 30,\n      strength: 10,\n      dexterity: 10,\n      constitution: 10,\n      wisdom: 10,\n      intelligence: 10,\n      charisma: 10\n    };\n\n    levels = [0, 250, 950, 2250, 4750, 9500, 16000, 25000, 38000, 56000, 77000, 96000, 120000, 150000, 190000, 230000, 280000, 330000, 390000, 460000];\n\n    Character = Ember.Object.extend(App.Jsonable, {\n      excludedJsonProperties: ['level', 'strengthModifier', 'constitutionModifier', 'dexterityModifier', 'wisdomModifier', 'intelligenceModifier', 'charismaModifier', 'attacks', 'weaponAttacks', 'spellAttacks'],\n      level: (function() {\n        var actLevel,\n          _this = this;\n        actLevel = 0;\n        levels.forEach(function(level) {\n          if (_this.get('xp') >= level) {\n            actLevel = levels.indexOf(level) + 1;\n          }\n        });\n        return actLevel;\n      }).property('xp'),\n      strengthModifier: App.computed.modifierFor('strength'),\n      constitutionModifier: App.computed.modifierFor('constitution'),\n      dexterityModifier: App.computed.modifierFor('dexterity'),\n      wisdomModifier: App.computed.modifierFor('wisdom'),\n      intelligenceModifier: App.computed.modifierFor('intelligence'),\n      charismaModifier: App.computed.modifierFor('charisma'),\n      weaponAttacks: (function() {\n        return this.get('attacks').filterProperty('type', 'weapon');\n      }).property('attacks'),\n      spellAttacks: (function() {\n        return this.get('attacks').filterProperty('type', 'spell');\n      }).property('attacks')\n    });\n\n    Character.prototype.save = function() {\n      return localStorage.setItem('character', JSON.stringify(this.getJson()));\n    };\n\n    Character.reopenClass({\n      get: function() {\n        var c, existingCharacter;\n        existingCharacter = localStorage.getItem('character');\n        if (existingCharacter) {\n          c = Character.create(Object.deepExtend(defaultCharacter, JSON.parse(existingCharacter)));\n        } else {\n          c = Character.create(defaultCharacter);\n          c.save();\n        }\n        c.set('attacks', Attack.get());\n        return c;\n      }\n    });\n\n\n    return Character;\n  });",
    "define(\"appkit/router\",\n  [],\n  function() {\n    \"use strict\";\n    var router;\n\n    router = Ember.Router.map(function() {\n      return this.resource('character');\n    });\n\n\n    return router;\n  });",
    "define(\"appkit/routes/character\",\n  [\"appkit/models/character\",\"appkit/models/attack\",\"appkit/helpers/modifier\"],\n  function(Character, Attack, ModifierHelper) {\n    \"use strict\";\n    var CharacterRoute;\n\n    CharacterRoute = Ember.Route.extend({\n      model: function() {\n        return Character.get();\n      },\n      actions: {\n        showHitPoints: function() {\n          return this.showModal('modal-hitPoints');\n        },\n        resetHitPoints: function() {\n          this.get('controller').send('resetHP');\n          return this.send('closeModal');\n        },\n        showAddXP: function() {\n          return this.showModal('modal-addXP');\n        },\n        showAttackDetails: function(model) {\n          return this.showModal('modal-attackDetails', model, 'attack');\n        },\n        closeModal: function() {\n          var _this = this;\n          setTimeout((function() {\n            _this.disconnectOutlet({\n              outlet: 'modal',\n              parentView: 'application'\n            });\n            return _this.get('controller').send('clearModalValues');\n          }), 500);\n          return $('.modal').removeClass('modal-show');\n        }\n      }\n    });\n\n    CharacterRoute.prototype.showModal = function(view, model, controller) {\n      var renderOptions;\n      if (model) {\n        this.controllerFor('attack').set('content', model);\n      }\n      renderOptions = {\n        into: 'application',\n        outlet: 'modal'\n      };\n      if (controller) {\n        renderOptions.controller = controller;\n      }\n      this.render(view, renderOptions);\n      return $('.modal').addClass('modal-show');\n    };\n\n\n    return CharacterRoute;\n  });",
    "define(\"appkit/routes/index\",\n  [],\n  function() {\n    \"use strict\";\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      model: function() {\n        return ['red', 'yellow', 'blue'];\n      }\n    });\n\n\n    return IndexRoute;\n  });"
  ]
}